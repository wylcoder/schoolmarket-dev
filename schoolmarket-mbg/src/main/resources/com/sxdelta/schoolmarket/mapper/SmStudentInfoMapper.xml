<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sxdelta.schoolmarket.mapper.SmStudentInfoMapper">
  <resultMap id="BaseResultMap" type="com.sxdelta.schoolmarket.model.SmStudentInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="schoolname" jdbcType="VARCHAR" property="schoolname" />
    <result column="departmentname" jdbcType="VARCHAR" property="departmentname" />
    <result column="institutename" jdbcType="VARCHAR" property="institutename" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="authenticationtime" jdbcType="TIMESTAMP" property="authenticationtime" />
    <result column="credit_rate" jdbcType="INTEGER" property="creditRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, student_id, schoolname, departmentname, institutename, classname, starttime, 
    endtime, authenticationtime, credit_rate
  </sql>
  <select id="selectByExample" parameterType="com.sxdelta.schoolmarket.model.SmStudentInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sm_student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sm_student_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sm_student_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sxdelta.schoolmarket.model.SmStudentInfoExample">
    delete from sm_student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sxdelta.schoolmarket.model.SmStudentInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sm_student_info (user_id, student_id, schoolname, 
      departmentname, institutename, classname, 
      starttime, endtime, authenticationtime, 
      credit_rate)
    values (#{userId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, #{schoolname,jdbcType=VARCHAR}, 
      #{departmentname,jdbcType=VARCHAR}, #{institutename,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{authenticationtime,jdbcType=TIMESTAMP}, 
      #{creditRate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sxdelta.schoolmarket.model.SmStudentInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sm_student_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="schoolname != null">
        schoolname,
      </if>
      <if test="departmentname != null">
        departmentname,
      </if>
      <if test="institutename != null">
        institutename,
      </if>
      <if test="classname != null">
        classname,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="authenticationtime != null">
        authenticationtime,
      </if>
      <if test="creditRate != null">
        credit_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="schoolname != null">
        #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null">
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="institutename != null">
        #{institutename,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="authenticationtime != null">
        #{authenticationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditRate != null">
        #{creditRate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sxdelta.schoolmarket.model.SmStudentInfoExample" resultType="java.lang.Long">
    select count(*) from sm_student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sm_student_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolname != null">
        schoolname = #{record.schoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentname != null">
        departmentname = #{record.departmentname,jdbcType=VARCHAR},
      </if>
      <if test="record.institutename != null">
        institutename = #{record.institutename,jdbcType=VARCHAR},
      </if>
      <if test="record.classname != null">
        classname = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authenticationtime != null">
        authenticationtime = #{record.authenticationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creditRate != null">
        credit_rate = #{record.creditRate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sm_student_info
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      schoolname = #{record.schoolname,jdbcType=VARCHAR},
      departmentname = #{record.departmentname,jdbcType=VARCHAR},
      institutename = #{record.institutename,jdbcType=VARCHAR},
      classname = #{record.classname,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      authenticationtime = #{record.authenticationtime,jdbcType=TIMESTAMP},
      credit_rate = #{record.creditRate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxdelta.schoolmarket.model.SmStudentInfo">
    update sm_student_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="schoolname != null">
        schoolname = #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null">
        departmentname = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="institutename != null">
        institutename = #{institutename,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="authenticationtime != null">
        authenticationtime = #{authenticationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditRate != null">
        credit_rate = #{creditRate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxdelta.schoolmarket.model.SmStudentInfo">
    update sm_student_info
    set user_id = #{userId,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      schoolname = #{schoolname,jdbcType=VARCHAR},
      departmentname = #{departmentname,jdbcType=VARCHAR},
      institutename = #{institutename,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      authenticationtime = #{authenticationtime,jdbcType=TIMESTAMP},
      credit_rate = #{creditRate,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>